# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Publish package to GitHub Packages
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  Build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'

    - name: Build package
      run: mvn --batch-mode package --file pom.xml
    #  env:
      #  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Create artifacts directory and copy war file
    #  run: mkdir artifacts && cp target/*.wa​​r artifacts
      uses: actions/upload-artifact@v2
      with:
        name: DevOpsPipeline.war
        path: target/DevOpsPipeline.war

  Publish:
     needs: Build
     runs-on: ubuntu-latest

     steps:
     - uses: actions/checkout@v2
     - name: Set up JDK 11
       uses: actions/setup-java@v1
       with:
         java-version: '11' 

     - name: Update version
       run: mvn -B versions:set -DnewVersion=v${{github.run_number}} -DgenerateBackupPoms=false
     - name: Setup Docker Buildx
       uses: docker/setup-buildx-action@v1
     
     - name: Login to DockerHub
       uses: docker/login-action@v1
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}

     - name: pwd
       run: pwd
     - name: ls -l
       run: ls -l
     - name: Download artifact
       uses: actions/download-artifact@v2
       
     - name: echo download path
       run: echo ${{steps.download.outputs.download-path}}

    
    # - name: Build package
    #  run: mvn --batch-mode package --file pom.xml

     - name: Build and push
       id: docker_build
       uses: docker/build-push-action@v2
       with:
         context: .
         push: true
         tags: saranitact/repo1:v${{github.run_number}}

    # - name: Inspect
    #   run: |
    #     docker image inspect saranitact/repo1:v${{github.run_number}} 

  Verify:
    needs: Publish
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11' 

    - name: Create repo1 Docker container
      #uses: DigiPie/mongo-action@v1.0.1
      run: sudo docker run -p 8005:8080 -it -d repo1:latest
      
    - name: Verify container
      run: ps -a
      
